// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Robot from "../lib/Robot.res.mjs";
import * as Robot3 from "robot3";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as ReactRobot from "react-robot";
import * as JsxRuntime from "react/jsx-runtime";

var Info = {};

var M = Robot.Make(Info);

var machine = Robot3.createMachine("Start", M.states([
          [
            "Start",
            Robot3.state(Robot3.transition("Listen", "Listen"))
          ],
          [
            "Listen",
            Robot3.state(Robot3.transition("GoAway", "Start"))
          ],
          [
            "GoAway",
            Robot3.state(Robot3.transition("Run", "Run"))
          ],
          [
            "Run",
            Robot3.state(Robot3.transition("Start", "Start"))
          ]
        ]), (function (initialContext) {
        
      }));

function Game$Screen(props) {
  return JsxRuntime.jsxs(JsxRuntime.Fragment, {
              children: [
                JsxRuntime.jsx("article", {
                      children: props.content
                    }),
                JsxRuntime.jsx("nav", {
                      children: JsxRuntime.jsx("ul", {
                            children: Belt_Array.mapWithIndex(props.options, (function (i, nav) {
                                    return JsxRuntime.jsx("li", {
                                                children: JsxRuntime.jsx("a", {
                                                      children: nav.element,
                                                      href: "#",
                                                      onClick: (function (param) {
                                                          nav.onClick();
                                                        })
                                                    })
                                              }, String(i));
                                  }))
                          })
                    })
              ]
            });
}

var $$Screen = {
  make: Game$Screen
};

function Game$Start(props) {
  var send = props.send;
  return JsxRuntime.jsx(Game$Screen, {
              content: JsxRuntime.jsx("p", {
                    children: "You were chosen to participate in a secret experiment."
                  }),
              options: [
                {
                  element: JsxRuntime.jsx("p", {
                        children: "Listen"
                      }),
                  onClick: (function () {
                      send("Listen");
                    })
                },
                {
                  element: JsxRuntime.jsx("p", {
                        children: "Go away"
                      }),
                  onClick: (function () {
                      send("GoAway");
                    })
                },
                {
                  element: JsxRuntime.jsx("p", {
                        children: "Run"
                      }),
                  onClick: (function () {
                      send("Run");
                    })
                }
              ]
            });
}

var Start = {
  make: Game$Start
};

function Game$Listen(props) {
  var send = props.send;
  return JsxRuntime.jsx(Game$Screen, {
              content: JsxRuntime.jsx("p", {
                    children: "You are listening to a recording of a person who is being tortured."
                  }),
              options: [{
                  element: JsxRuntime.jsx("p", {
                        children: "Go back"
                      }),
                  onClick: (function () {
                      send("GoAway");
                    })
                }]
            });
}

var Listen = {
  make: Game$Listen
};

function Game(props) {
  var match = ReactRobot.useMachine(machine, undefined);
  var send = match[1];
  var match$1 = match[0].name;
  if (match$1 === "Listen") {
    return JsxRuntime.jsx(Game$Listen, {
                send: send
              });
  } else {
    return JsxRuntime.jsx(Game$Start, {
                send: send
              });
  }
}

var make = Game;

export {
  Info ,
  M ,
  machine ,
  $$Screen ,
  Start ,
  Listen ,
  make ,
}
/* M Not a pure module */
