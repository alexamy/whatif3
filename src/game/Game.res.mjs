// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Input from "./screens/Input.res.mjs";
import * as React from "react";
import * as $$Screen from "./Screen.res.mjs";
import * as Display from "./screens/Display.res.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";

function Game$Terminal(props) {
  var match = Display.useDisplay({
        width: 36,
        height: 14
      });
  var viewport = match.viewport;
  var screen = match.screen;
  var match$1 = Input.useInput({
        width: 36
      });
  var run = match$1.run;
  var message = match$1.message;
  var match$2 = React.useState(function () {
        return "";
      });
  var processMessage = function (text) {
    var message = text.trim();
    if (message === "clear") {
      return screen("Clear");
    } else if (message.length > 0) {
      return screen({
                  TAG: "Echo",
                  _0: message
                });
    } else {
      return ;
    }
  };
  var onKeyDown = function (e) {
    var key = e.key;
    switch (key) {
      case "ArrowDown" :
          return viewport("Down");
      case "ArrowUp" :
          return viewport("Up");
      case "Backspace" :
          return run("RemoveChar");
      case "Enter" :
          processMessage(message);
          viewport("Reset");
          return run("Clear");
      default:
        if (key.length === 1) {
          return run({
                      TAG: "AddChar",
                      _0: key
                    });
        } else {
          return ;
        }
    }
  };
  var lines = Belt_Array.mapWithIndex(match.display, (function (i, line) {
          return JsxRuntime.jsx("div", {
                      children: line
                    }, String(i));
        }));
  return JsxRuntime.jsxs("div", {
              children: [
                lines,
                JsxRuntime.jsxs("div", {
                      children: [
                        "> ",
                        JsxRuntime.jsx("span", {
                              children: message,
                              className: match$2[0]
                            }),
                        match$1.beam
                      ]
                    })
              ],
              className: "monospace screen-w screen-h outline-0 whitespace-pre text-nowrap bg-blue-400 text-gray-800 p-2 flex flex-col justify-end",
              tabIndex: 0,
              onKeyDown: onKeyDown,
              onFocus: (function (param) {
                  run({
                        TAG: "Focus",
                        _0: true
                      });
                }),
              onBlur: (function (param) {
                  run({
                        TAG: "Focus",
                        _0: false
                      });
                }),
              onClick: (function (param) {
                  run({
                        TAG: "Focus",
                        _0: true
                      });
                })
            });
}

var Terminal = {
  make: Game$Terminal
};

function Game(props) {
  var match = React.useState(function () {
        return false;
      });
  var setShown = match[1];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx($$Screen.make, {
                      content: JsxRuntime.jsx("p", {
                            children: "You are hearing strange letters: B Y M N."
                          }),
                      options: [[
                          "Go back",
                          (function () {
                              setShown(function (prev) {
                                    return !prev;
                                  });
                            })
                        ]]
                    }),
                JsxRuntime.jsx(Game$Terminal, {})
              ],
              className: "flex gap-4 justify-center"
            });
}

var make = Game;

export {
  Terminal ,
  make ,
}
/* Input Not a pure module */
