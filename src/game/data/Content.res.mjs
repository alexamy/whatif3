// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as $$Screen from "../Screen.res.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";

function useSwitch(initial) {
  var match = React.useState(function () {
        return initial;
      });
  var setState = match[1];
  var state = match[0];
  var toggle = function (state) {
    setState(function (param) {
          return state;
        });
  };
  var content = function (children) {
    if (state === "Visited") {
      return children;
    } else {
      return null;
    }
  };
  return {
          state: state,
          content: content,
          toggle: toggle
        };
}

var SwitchBase = {
  useSwitch: useSwitch
};

function useSwitch$1(initial) {
  var base = useSwitch(initial);
  var isVisited = base.state === "Visited";
  var link = function (children) {
    if (isVisited) {
      return children;
    } else {
      return JsxRuntime.jsx($$Screen.Link.make, {
                  onClick: (function () {
                      base.toggle("Visited");
                    }),
                  children: children
                });
    }
  };
  var content = function (children) {
    if (isVisited) {
      return children;
    } else {
      return null;
    }
  };
  return {
          link: link,
          content: content
        };
}

var Switch = {
  useSwitch: useSwitch$1
};

var paths = [
  [
    "Подойти к столу",
    "Table"
  ],
  [
    "Подойти к окну",
    "Window"
  ],
  [
    "Подойти к двери",
    "Door"
  ]
];

function Content$Room(props) {
  var goTo = props.goTo;
  var note1 = useSwitch$1("Unvisited");
  var options = Belt_Array.map(paths, (function (param) {
          var place = param[1];
          return [
                  param[0],
                  (function () {
                      goTo(place);
                    })
                ];
        }));
  var content = JsxRuntime.jsxs(JsxRuntime.Fragment, {
        children: [
          "Вы стоите посреди комнаты. На вашей руке - умные часы. Вы используете их для записи и чтения заметок.",
          note1.link("Читать заметку"),
          note1.content("Вы читаете заметку: \"Привет, мир!\"")
        ]
      });
  return JsxRuntime.jsx($$Screen.make, {
              content: content,
              options: options
            });
}

var Room = {
  computer: "Watch",
  paths: paths,
  make: Content$Room
};

var screens = [
  {
    place: "Table",
    computer: "Watch",
    description: "Вы стоите у стола. На столе в беспорядке лежат заметки, ручки, бумажки и прочие предметы.",
    options: [[
        "Вернуться",
        "Room"
      ]]
  },
  {
    place: "Window",
    computer: "Watch",
    description: "Вы стоите у окна. За окном - улица, на которой виднеются машины и люди.",
    options: [[
        "Вернуться",
        "Room"
      ]]
  },
  {
    place: "Door",
    computer: "Door",
    description: "Вы стоите у двери. На двери надпись: \"Выход\", а также электронный код-замок. Дверь заперта.",
    options: [[
        "Вернуться",
        "Room"
      ]]
  }
];

export {
  SwitchBase ,
  Switch ,
  Room ,
  screens ,
}
/* react Not a pure module */
