// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Jq from "../lib/Jq.res.mjs";
import * as Jqx from "../lib/Jqx.res.mjs";
import * as Link from "./Link.res.mjs";

function make(initialOpt) {
  var initial = initialOpt !== undefined ? initialOpt : "Unvisited";
  var state = {
    contents: initial
  };
  var content = {
    contents: Jq.Dom.placeholder
  };
  var makeContent = function (element) {
    return Jq.ref(content, element);
  };
  var update = function (newState) {
    state.contents = newState;
    if (newState === "Visited") {
      return Jq.show(content.contents);
    } else {
      return Jq.hide(content.contents);
    }
  };
  var setup = function () {
    update(initial);
  };
  return {
          content: makeContent,
          update: update,
          setup: setup
        };
}

var Base = {
  make: make
};

function replaceWithText(link) {
  var text = Jq.getText(link);
  Jq.replaceWith(link, Jq.string(text));
}

function make$1(initialOpt) {
  var initial = initialOpt !== undefined ? initialOpt : "Unvisited";
  var base = make(initial);
  var link = {
    contents: Jq.Dom.placeholder
  };
  var makeLink = function (text) {
    return Jqx.jsx(Link.make, {
                children: Jqx.string(text),
                bind: link
              });
  };
  var update = function (newState) {
    base.update(newState);
    if (newState === "Visited") {
      return replaceWithText(link.contents);
    } else {
      return Jq.onClick(link.contents, (function (param) {
                    update("Visited");
                  }), {
                  once: true
                });
    }
  };
  var setup = function () {
    update(initial);
  };
  return {
          content: base.content,
          link: makeLink,
          update: update,
          setup: setup
        };
}

var Toggle = {
  replaceWithText: replaceWithText,
  make: make$1
};

export {
  Base ,
  Toggle ,
}
/* Jq Not a pure module */
