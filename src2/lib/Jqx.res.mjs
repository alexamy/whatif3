// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Jq from "./Jq.res.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function toJqArray(element) {
  if (element.TAG === "One") {
    return [element._0];
  } else {
    return element._0;
  }
}

function array(elements) {
  return {
          TAG: "Many",
          _0: Belt_Array.flatMap(elements, toJqArray)
        };
}

function string(text) {
  return {
          TAG: "One",
          _0: Jq.string(text)
        };
}

function $$int(number) {
  var text = String(number);
  return {
          TAG: "One",
          _0: Jq.string(text)
        };
}

function $$float(number) {
  var text = String(number);
  return {
          TAG: "One",
          _0: Jq.string(text)
        };
}

function $$null() {
  return {
          TAG: "One",
          _0: Jq.Dom.$$null()
        };
}

function text(strings) {
  return {
          TAG: "Many",
          _0: Belt_Array.map(strings, Jq.string)
        };
}

function ref(ref$1, element) {
  if (element.TAG === "One") {
    return {
            TAG: "One",
            _0: Jq.ref(ref$1, element._0)
          };
  }
  var match = element._0;
  if (match.length !== 1) {
    return {
            TAG: "One",
            _0: Jq.Dom.$$null()
          };
  }
  var element$1 = match[0];
  return {
          TAG: "One",
          _0: Jq.ref(ref$1, element$1)
        };
}

function make(tag, props) {
  var element = Jq.make(tag);
  var children = Belt_Option.mapWithDefault(props.children, [], toJqArray);
  Jq.append(element, children);
  Belt_Option.map(props.bind, (function (ref) {
          ref.contents = element;
        }));
  Belt_Option.map(props.class, (function ($$class) {
          Jq.addClass(element, $$class);
        }));
  Belt_Option.map(props.classes, (function (classes) {
          Jq.toggleClasses(element, classes);
        }));
  Belt_Option.map(props.dependencies, (function (dependencies) {
          Belt_Array.forEach(dependencies, (function (dependency) {
                  dependency();
                }));
        }));
  Belt_Option.map(props.attributes, (function (attributes) {
          Belt_Array.forEach(attributes, (function (param) {
                  Jq.setAttribute(element, param[0], param[1]);
                }));
        }));
  Belt_Option.map(props.onClickOnce, (function (onClick) {
          return Jq.onClick(element, onClick, {
                      once: true
                    });
        }));
  return {
          TAG: "One",
          _0: element
        };
}

export {
  toJqArray ,
  array ,
  string ,
  $$int ,
  $$float ,
  $$null ,
  text ,
  ref ,
  make ,
}
/* Jq Not a pure module */
