// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Jq from "./Jq.res.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function array(elements) {
  return {
          TAG: "Many",
          _0: Belt_Array.flatMap(elements, (function (element) {
                  if (element.TAG === "One") {
                    return [element._0];
                  } else {
                    return element._0;
                  }
                }))
        };
}

var $$null = Jq.Dom.$$null;

function $$float(number) {
  return {
          TAG: "One",
          _0: Jq.string(String(number))
        };
}

function $$int(number) {
  return {
          TAG: "One",
          _0: Jq.string(String(number))
        };
}

function string(text) {
  return {
          TAG: "One",
          _0: Jq.string(text)
        };
}

function fromElement(element) {
  if (element.TAG === "One") {
    return [element._0];
  } else {
    return element._0;
  }
}

function jsx(string, props) {
  var element = Jq.makeFromString(string);
  Belt_Option.map(props.class, (function ($$class) {
          Jq.addClass(element, $$class);
        }));
  Belt_Option.map(props.children, (function (child) {
          Jq.append(element, fromElement(child));
        }));
  return {
          TAG: "One",
          _0: element
        };
}

function jsxKeyed(string, props, key, unit) {
  return jsx(string, props);
}

var Elements = {
  fromElement: fromElement,
  jsx: jsx,
  jsxKeyed: jsxKeyed,
  jsxs: jsx,
  jsxsKeyed: jsxKeyed
};

export {
  array ,
  $$null ,
  $$float ,
  $$int ,
  string ,
  Elements ,
}
/* Jq Not a pure module */
